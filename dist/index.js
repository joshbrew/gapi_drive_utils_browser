(()=>{var w={"application/vnd.google-apps.spreadsheet":[{label:"CSV",mime:"text/csv",ext:".csv"},{label:"XLSX",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",ext:".xlsx"},{label:"PDF",mime:"application/pdf",ext:".pdf"},{label:"ODS",mime:"application/vnd.oasis.opendocument.spreadsheet",ext:".ods"}],"application/vnd.google-apps.document":[{label:"DOCX",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document",ext:".docx"},{label:"PDF",mime:"application/pdf",ext:".pdf"},{label:"ODT",mime:"application/vnd.oasis.opendocument.text",ext:".odt"},{label:"RTF",mime:"application/rtf",ext:".rtf"},{label:"TXT",mime:"text/plain",ext:".txt"}],"application/vnd.google-apps.presentation":[{label:"PPTX",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation",ext:".pptx"},{label:"PDF",mime:"application/pdf",ext:".pdf"},{label:"ODP",mime:"application/vnd.oasis.opendocument.presentation",ext:".odp"},{label:"JPG",mime:"image/jpeg",ext:".jpg"},{label:"PNG",mime:"image/png",ext:".png"},{label:"SVG",mime:"image/svg+xml",ext:".svg"}]},y=class p{google=window.google;gapi=window.gapi;tokenClient=window.tokenClient;accessToken;gapiInited=this.gapi!==void 0;gsiInited=this.google!==void 0;isLoggedIn=!1;container;userId;fedcmEnabled=!0;directory="AppData";directoryId;persistToken=!0;storageKey="_gdr_tok_25v1";tokenExpiresAt;constructor(t,r){r?.directory&&(this.directory=r.directory),r?.persistToken&&(this.persistToken=r.persistToken),r?.storageKey&&(this.storageKey=r.storageKey),t&&this.initGapi(t,r?.discoverydocs,r?.scope)}initGapi=async(t,r=["https://www.googleapis.com/discovery/v1/apis/oauth2/v2/rest","https://www.googleapis.com/discovery/v1/apis/drive/v3/rest","https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest","https://www.googleapis.com/discovery/v1/apis/sheets/v4/rest"],e=["https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/calendar","https://www.googleapis.com/auth/spreadsheets","https://www.googleapis.com/auth/userinfo.profile","https://www.googleapis.com/auth/userinfo.email"].join(" "))=>new Promise(async(i,n)=>{if(!t)return n(new Error("googleClientID is required for initGapi"));let s="gapi-client-script";if(!document.getElementById(s))this.loadScript(s,"https://apis.google.com/js/api.js",()=>{if(!window.gapi)return n(new Error("gapi not available after script load"));this.gapi=window.gapi,this.gapi.load("client",async()=>{try{await this.gapi.client.init({discoveryDocs:r})}catch(o){return n(o)}this._loadGis(t,e).then(()=>i(!0)).catch(n)})});else try{await this.gapi.client.init({discoveryDocs:r}),await this._loadGis(t,e),i(!0)}catch(o){n(o)}});_loadGis=async(t,r)=>new Promise((e,i)=>{this.loadScript("gsi-client-script","https://accounts.google.com/gsi/client",()=>{if(!window.google||!window.google.accounts)return i(new Error("GIS client not available after load"));this.google=window.google,this.tokenClient=this.google.accounts.oauth2.initTokenClient({client_id:t,scope:r,callback:s=>{},use_fedcm_for_prompt:this.fedcmEnabled,use_fedcm_for_button:this.fedcmEnabled}),e()})});static parseFileId(t){let r=[/\/d\/([A-Za-z0-9_-]+)/,/\/file\/d\/([A-Za-z0-9_-]+)/,/open\?id=([A-Za-z0-9_-]+)/,/id=([A-Za-z0-9_-]+)/],e=null;for(let i of r){let n=t.match(i);if(n){e=n[1];break}}return e}static async fetchPublicFile(t,r={}){let e=p.parseFileId(t);e||(e=t);let i;if(r.exportMime==="text/csv"){let h=r.gid??0;i=`https://docs.google.com/spreadsheets/d/${e}/export?format=csv&gid=${h}`}else i=`https://drive.google.com/uc?export=download&id=${e}`;let n=await fetch(i);if(!n.ok)throw new Error(`fetchPublicFile failed: ${n.status} ${n.statusText}`);let s=n.headers.get("Content-Type")||"",a=(n.headers.get("Content-Disposition")||"").match(/filename\*=UTF-8''([^;]+)|filename="([^"]+)"/),l=a?decodeURIComponent(a[1]||a[2]):void 0,d=n.headers.get("Content-Length"),c=d?parseInt(d,10):void 0,g;return r.exportMime==="text/csv"||s.startsWith("text/")||s==="application/json"?g=await n.text():g=await n.blob(),{data:g,metadata:{contentType:s,fileName:l,size:c}}}loadApi=async(t,r,e)=>{if(!this.gapi||!this.gapi.client)throw new Error("gapi.client not initialized. Did you forget to call initGapi()?");if(e){await this.gapi.client.load(e);return}return new Promise((i,n)=>{this.gapi.client.load(t,r).then(()=>i()).catch(s=>n(new Error(`Failed to load API ${t}/${r}: ${s.message||s}`)))})};handleUserSignIn=()=>new Promise((t,r)=>{if(!this.tokenClient)return console.error("Token client not initialized"),r("Token client not initialized");this.tokenClient.callback=e=>{if(e.error)console.error("Token request error:",e.error),r(e.error);else if(e.access_token){if(this.accessToken=e.access_token,this.isLoggedIn=!0,this.persistToken){let i=(e.expires_in||3600)*1e3,n=Date.now()+i;localStorage.setItem(this.storageKey,JSON.stringify({accessToken:e.access_token,expiresAt:n}))}this.directory&&!this.directoryId?this.checkFolder(this.directory).then(()=>t(e)).catch(r):t(e)}else console.error("Sign-in incomplete."),r("Sign-in incomplete")},this.tokenClient.requestAccessToken({prompt:"consent"})});attemptRestoreSignIn=async t=>{if(t?.access_token)this.accessToken=t.access_token,this.tokenExpiresAt=Date.now()+(t.expires_in||3600)*1e3,this.isLoggedIn=!0;else if(this.persistToken){let r=localStorage.getItem(this.storageKey);if(!r)throw new Error("no stored token");let{accessToken:e,expiresAt:i}=JSON.parse(r);if(Date.now()>i-6e4)throw localStorage.removeItem(this.storageKey),new Error("stored token expired");this.accessToken=e,this.tokenExpiresAt=i,this.isLoggedIn=!0}else throw new Error("no token to restore");return this.directory&&!this.directoryId&&await this.checkFolder(this.directory),{access_token:this.accessToken}};async signOut(){return this.accessToken?(await this.google.accounts.oauth2.revoke(this.accessToken,()=>{console.log("Access token revoked")}),this.accessToken="",this.isLoggedIn=!1,!0):!1}loadScript=(t,r,e)=>new Promise(i=>{let n=document.createElement("script");n.type="text/javascript",n.src=r,n.async=!0,n.defer=!0,n.id=t,n.onload=()=>{e(),i(!0)},document.head.appendChild(n)});deinit=()=>{this.google=void 0,this.gapi=void 0,this.tokenClient=void 0,this.isLoggedIn=!1,this.accessToken="";let t=r=>{let e=document.getElementById(r);e&&document.head.removeChild(e)};t("gapi-client-script"),t("gsi-client-script")};async searchDrive(t,r=100,e=void 0,i,n=!1){try{let s=`name contains '${t}' and trashed=${n}`;i&&(s+=` and '${i}' in parents`);let o=await this.gapi.client.drive.files.list({q:s,pageSize:r,fields:"nextPageToken, files(id, name, mimeType)",pageToken:e});return{files:o.result.files,nextPageToken:o.result.nextPageToken}}catch(s){throw console.error("Error searching Drive:",s),s}}checkFolder=(t=this.directory,r=n=>{},e=!1,i)=>new Promise((n,s)=>{let o;e?o=`'${t}' in parents and mimeType='application/vnd.google-apps.folder'`+(i?` and '${i}' in parents`:""):(o=`name='${t}' and mimeType='application/vnd.google-apps.folder'`,i&&(o+=` and '${i}' in parents`)),this.gapi.client.drive.files.list({q:o}).then(async a=>{if(a.result.files)if(a.result.files?.length===0){let l=await this.createDriveFolder(t,i);if(typeof l!="object")throw new Error(`${l}`);r&&r(l),this.directoryId||(this.directoryId=l.id),n(l)}else r&&r(a.result),this.directoryId||(this.directoryId=a.result.files[0].id),n(a.result)}).catch(a=>{console.error("Error checking folder:",a),s(a)})});createDriveFolder=(t=this.directory,r)=>new Promise((e,i)=>{if(this.isLoggedIn){let n={};n.name=t,n.mimeType="application/vnd.google-apps.folder",r&&(n.parents=[r]),this.gapi.client.drive.files.create({resource:n}).then(s=>{e(s.result)})}else console.error("Sign in with Google first!"),this.handleUserSignIn().then(async n=>{this.isLoggedIn&&e(await this.createDriveFolder(t,r))})});async listFolders(t=this.directoryId,r="parents"){try{return(await this.gapi.client.drive.files.list({q:`'${t}' in ${r} and mimeType='application/vnd.google-apps.folder'`,fields:"nextPageToken, files(id, name, mimeType)"})).result.files||[]}catch(e){throw console.error("Error listing folders:",e),e}}async getSharableLink(t){try{let e=(await this.gapi.client.drive.permissions.list({fileId:t,fields:"permissions(id, role, type)"})).result.permissions;if(!e)throw new Error("No permissions!");return e.find(s=>s.type==="anyone"&&s.role==="reader")||await this.gapi.client.drive.permissions.create({fileId:t,resource:{role:"reader",type:"anyone"}}),(await this.getFileMetadata(t)).webViewLink}catch(r){throw console.error("Error getting sharable link:",r),r}}async getFileMetadata(t){try{return(await this.gapi.client.drive.files.get({fileId:t,fields:"id, name, mimeType, parents, webViewLink, iconLink, exportLinks, thumbnailLink, size, createdTime, modifiedTime, shared, owners, permissions"})).result}catch(r){throw console.error("Error getting file metadata:",r),r}}async getFolderId(t,r="root"){try{let e=`mimeType='application/vnd.google-apps.folder' and name='${t}' ${r?`and '${r}' `:""}in parents and trashed=false`,i=await this.gapi.client.drive.files.list({q:e,fields:"files(id, name)",pageSize:1}),n=i.result.files&&i.result.files[0];return n?n.id:void 0}catch(e){throw console.error("Error getting folder ID:",e),e}}async downloadFileByName(t,r,e,i=!0,n=this.directoryId){let s=await this.getFileMetadataByName(t,n);if(!s?.id)throw new Error(`No file named "${t}" found in folder ${n}`);return this.downloadFile(s.id,r,e??s.name,i)}async downloadFile(t,r,e,i=!0){let s=(await this.gapi.client.drive.files.get({fileId:t,fields:"id,name,mimeType,exportLinks"})).result,o=s.mimeType,a=e||s.name,l=w[o]??[],d=l.length>0,c=r&&l.find(u=>u.mime===r)?.mime,g="";d&&(c||(c=l[0].mime),g=l.find(u=>u.mime===c)?.ext??"");let h;if(d&&c){let u=s.exportLinks?.[c];if(u){let m=this.gapi.auth.getToken().access_token,f=await fetch(u,{headers:{Authorization:`Bearer ${m}`}});if(!f.ok)throw new Error(`Export failed: ${f.status}`);h=await f.blob()}else{let m=await this.gapi.client.drive.files.export({fileId:t,mimeType:c});h=new Blob([m.body],{type:c})}}else{let u=this.gapi.auth.getToken().access_token;if(!u)throw new Error("Not signed in");let m=await fetch(`https://www.googleapis.com/drive/v3/files/${t}?alt=media`,{headers:{Authorization:`Bearer ${u}`}});if(!m.ok)throw new Error(`Download failed: ${m.status}`);h=await m.blob()}if(i){let u=document.createElement("a");u.href=URL.createObjectURL(h),u.download=a+g,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(u.href)}return h}async uploadFileToGoogleDrive(t=`a,b,c,1,2,3
d,e,f,4,5,6
`,r=`${new Date().toISOString()}.csv`,e="application/vnd.google-apps.spreadsheet",i=this.directoryId,n,s=!1){if(typeof t=="string"){let c=r.endsWith(".csv")?"text/csv":"text/plain";t=new Blob([t],{type:c})}let o={name:r,mimeType:e,parents:Array.isArray(i)?i:[i]},a=new FormData;a.append("metadata",new Blob([JSON.stringify(o)],{type:"application/json"})),a.append("file",t);let l=this.gapi.auth.getToken().access_token,d=new XMLHttpRequest;if(s){let c=await this.getFileMetadataByName(r,Array.isArray(i)?i[0]:i);c?d.open("PATCH",`https://www.googleapis.com/upload/drive/v3/files/${c.id}?uploadType=multipart`):d.open("POST","https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart")}else d.open("POST","https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart");return d.setRequestHeader("Authorization","Bearer "+l),n&&(d.upload.onprogress=n),new Promise((c,g)=>{d.onload=()=>{d.status===200?c(JSON.parse(d.responseText)):g(d.responseText)},d.onerror=()=>g(d.statusText),d.send(a)})}async uploadFiles(t,r=this.directoryId,e,i=!1){typeof e=="string"&&(e=document.getElementById("upload-progress")),e&&(e.style.display="block");for(let n=0;n<t.length;n++){let s=t[n];try{let o;if(i){let a=await this.getFileMetadataByName(s.name,r);a&&(o=a.id)}o?await this.updateFile(o,s.data,s.mimeType,a=>{let l=a.loaded/a.total*100;e?e.value=l:console.log("Upload progress: ",l)}):await this.uploadFileToGoogleDrive(s.data,s.name,s.mimeType,s.parents||r,a=>{let l=a.loaded/a.total*100;e?e.value=l:console.log("Upload progress: ",l)}),e&&(e.value=0)}catch(o){console.error("Error uploading file:",s.name,o)}}e&&(e.style.display="none")}async updateFile(t,r,e,i){if(typeof r=="string"){let l=e==="text/csv"?"text/csv":"text/plain";r=new Blob([r],{type:l})}let n={mimeType:e},s=new FormData;s.append("metadata",new Blob([JSON.stringify(n)],{type:"application/json"})),s.append("file",r);let o=new XMLHttpRequest;o.open("PATCH",`https://www.googleapis.com/upload/drive/v3/files/${t}?uploadType=multipart`);let a=this.gapi.auth.getToken().access_token;return o.setRequestHeader("Authorization","Bearer "+a),i&&(o.upload.onprogress=i),new Promise((l,d)=>{o.onload=()=>{o.status===200?l(JSON.parse(o.responseText)):d(o.responseText)},o.onerror=()=>d(o.statusText),o.send(s)})}async listDriveFiles(t=this.directoryId,r=100,e,i=void 0,n){if(this.isLoggedIn)try{let s=await this.gapi.client.drive.files.list({q:`'${t}' ${n?`and '${n}' `:""}in parents and trashed=false`,pageSize:r,fields:"nextPageToken, files(id, name, mimeType)",pageToken:i});return s.result?.files&&s.result.files.length>0&&e&&e(s.result.files),{files:s.result.files,nextPageToken:s.result.nextPageToken}}catch(s){throw console.error("Error listing Drive files:",s),s}else console.error("Sign in with Google first!"),this.handleUserSignIn().then(async()=>{if(this.isLoggedIn)return await this.listDriveFiles(t,r,e,i,n)})}deleteFile(t){this.gapi&&this.gapi.client&&this.gapi.client.drive?this.gapi.client.drive.files.delete({fileId:t}).then(r=>{console.log("File successfully deleted",r)}).catch(r=>{console.error("Error deleting file:",r)}):console.error("Google Drive API client is not initialized.")}async getFileMetadataByName(t,r=this.directoryId){try{let e=`name='${t}' and '${r}' in parents and trashed=false`,i=await this.gapi.client.drive.files.list({q:e,fields:"files(id, name, mimeType, parents, webViewLink, iconLink, exportLinks, thumbnailLink, size, createdTime, modifiedTime, shared, owners, permissions)",pageSize:1}),n=i.result.files&&i.result.files[0];if(n)return n;console.error("File not found");return}catch(e){throw console.error("Error getting file metadata:",e),e}}async shareFileByName(t,r,e="reader",i={}){try{let n=await this.getFileMetadataByName(t);if(!n?.id)throw new Error(`File named "${t}" not found`);return this.shareFile(n.id,r,e,i)}catch(n){throw console.error("Error sharing file by name:",n),n}}async shareFile(t,r,e="reader",i={}){try{let n=await this.gapi.client.drive.permissions.create({fileId:t,resource:{role:e,type:"user",emailAddress:r},...i});return console.log("File shared:",n.result),n.result}catch(n){throw console.error("Error sharing file:",n),n}}async revokeFileAccess(t,r){try{let e=await this.gapi.client.drive.permissions.list({fileId:t});if(!e.result.permissions)throw new Error(`No permissions on ${t}`);let i=e.result.permissions.find(n=>n.emailAddress===r);if(i?.id)await this.gapi.client.drive.permissions.delete({fileId:t,permissionId:i.id}),console.log("File access revoked for:",r);else throw new Error(`No permission found for email: ${r}`)}catch(e){throw console.error("Error revoking file access:",e),e}}async createSpreadsheet(t,r=this.directoryId,e=this.accessToken){let i="https://sheets.googleapis.com/v4/spreadsheets",n={properties:{title:t},parents:[r]};return new Promise((s,o)=>{let a=new XMLHttpRequest;a.open("POST",i,!0),a.setRequestHeader("Authorization",`Bearer ${e}`),a.setRequestHeader("Content-Type","application/json"),a.onload=()=>{a.status===200?s(JSON.parse(a.responseText)):o(a.responseText)},a.onerror=()=>o(a.statusText),a.send(JSON.stringify(n))})}async findSpreadsheet(t,r=this.directoryId,e=this.accessToken){let i="https://www.googleapis.com/drive/v3/files",n=`name='${t}' and '${r}' in parents and mimeType='application/vnd.google-apps.spreadsheet' and trashed=false`,s=`${i}?q=${encodeURIComponent(n)}`;return new Promise((o,a)=>{let l=new XMLHttpRequest;l.open("GET",s,!0),l.setRequestHeader("Authorization",`Bearer ${e}`),l.onload=()=>{if(l.status===200){let d=JSON.parse(l.responseText);o(d.files[0])}else a(l.responseText)},l.onerror=()=>a(l.statusText),l.send()})}async createTab(t,r,e=this.accessToken){let i=`https://sheets.googleapis.com/v4/spreadsheets/${t}:batchUpdate`,n={requests:[{addSheet:{properties:{title:r}}}]};return new Promise((s,o)=>{let a=new XMLHttpRequest;a.open("POST",i,!0),a.setRequestHeader("Authorization",`Bearer ${e}`),a.setRequestHeader("Content-Type","application/json"),a.onload=()=>{a.status===200?s(JSON.parse(a.responseText)):o(a.responseText)},a.onerror=()=>o(a.statusText),a.send(JSON.stringify(n))})}async getSheetData(t,r="",e){let i;return r?i=`https://sheets.googleapis.com/v4/spreadsheets/${t}/values/${encodeURIComponent(r)}?majorDimension=ROWS`:i=`https://sheets.googleapis.com/v4/spreadsheets/${t}?includeGridData=true`,new Promise((n,s)=>{let o=new XMLHttpRequest;o.open("GET",i,!0),o.setRequestHeader("Authorization",`Bearer ${e}`),o.onload=()=>{o.status===200?n(JSON.parse(o.responseText)):s(`Error ${o.status}: ${o.responseText}`)},o.onerror=()=>s(o.statusText),o.send()})}async setSheetData(t,r,e=this.accessToken,i,n="RAW",s){let o=`https://sheets.googleapis.com/v4/spreadsheets/${t}/values/${encodeURIComponent(r+"!"+i)}:append?valueInputOption=${n}`;return new Promise((a,l)=>{let d=new XMLHttpRequest;d.open("POST",o,!0),d.setRequestHeader("Authorization",`Bearer ${e}`),d.setRequestHeader("Content-Type","application/json"),d.onload=()=>{d.status===200?a(JSON.parse(d.responseText)):l(d.responseText)},d.onerror=()=>l(d.statusText),d.send(JSON.stringify(s))})}async appendData(t,r,e=this.accessToken,i="RAW",n){let s=`https://sheets.googleapis.com/v4/spreadsheets/${t}/values/${encodeURIComponent(r)}:append?valueInputOption=${i}&insertDataOption=INSERT_ROWS`;return new Promise((o,a)=>{let l=new XMLHttpRequest;l.open("POST",s,!0),l.setRequestHeader("Authorization",`Bearer ${e}`),l.setRequestHeader("Content-Type","application/json"),l.onload=()=>{l.status===200?o(JSON.parse(l.responseText)):a(l.responseText)},l.onerror=()=>a(l.statusText),l.send(JSON.stringify(n))})}async appendToGoogleSheetOrCreateTab(t,r,e,i="RAW",n=this.directoryId){let s=this.gapi.auth.getToken().access_token,o={values:e};try{let a=await this.findSpreadsheet(t,n,s);a||(a=await this.createSpreadsheet(t,n,s));try{await this.appendData(a.id,r,s,i,o)}catch(l){if(l.includes("Unable to parse range"))await this.createTab(a.id,r,s),await this.appendData(a.id,r,s,i,o);else throw l}}catch(a){throw console.error("Error:",a),a}}async createCalendar(t){try{let r=await this.gapi.client.calendar.calendars.insert({resource:{summary:t}});return console.log("Calendar created:",r.result),r.result}catch(r){throw console.error("Error creating calendar:",r),r}}async findCalendarByName(t){try{let e=(await this.gapi.client.calendar.calendarList.list()).result.items;return e&&e.find(n=>n.summary===t)||void 0}catch(r){throw console.error("Error finding calendar by name:",r),r}}async findEventByName(t,r){try{let i=(await this.gapi.client.calendar.events.list({calendarId:t,q:r})).result.items;return i&&i.find(s=>s.summary===r)||void 0}catch(e){throw console.error("Error finding event by name:",e),e}}async listAllCalendars(){try{return(await this.gapi.client.calendar.calendarList.list()).result.items}catch(t){throw console.error("Error listing all calendars:",t),t}}async listEventsByCalendarName(t,r,e){try{let i=await this.findCalendarByName(t);if(!i?.id)throw new Error(`Calendar named "${t}" not found`);return this.listEvents(i.id,r,e)}catch(i){throw console.error("Error listing events by calendar name:",i),i}}async listEvents(t,r,e){try{return(await this.gapi.client.calendar.events.list({calendarId:t,timeMin:r,timeMax:e,singleEvents:!0,orderBy:"startTime"})).result.items}catch(i){throw console.error("Error listing events:",i),i}}async deleteCalendarByName(t){try{let r=await this.findCalendarByName(t);if(!r?.id)throw new Error(`Calendar named "${t}" not found`);return this.deleteCalendar(r.id)}catch(r){throw console.error("Error deleting calendar by name:",r),r}}async deleteCalendar(t){try{let r=await this.gapi.client.calendar.calendars.delete({calendarId:t});return console.log("Calendar deleted:",r),r}catch(r){throw console.error("Error deleting calendar:",r),r}}async shareCalendarByName(t,r,e="reader",i={}){try{let n=await this.findCalendarByName(t);if(!n?.id)throw new Error(`Calendar named "${t}" not found`);return this.shareCalendar(n.id,r,e,i)}catch(n){throw console.error("Error sharing calendar by name:",n),n}}async shareCalendar(t,r,e="reader",i={}){try{let n=await this.gapi.client.calendar.acl.insert({calendarId:t,resource:{role:e,scope:{type:"user",value:r}},...i});return console.log("Calendar shared:",n.result),n.result}catch(n){throw console.error("Error sharing calendar:",n),n}}async createEventByCalendarName(t,r){try{let e=await this.findCalendarByName(t);if(!e?.id)throw new Error(`Calendar named "${t}" not found`);return this.createEvent(e.id,r)}catch(e){throw console.error("Error creating event by calendar name:",e),e}}async createEvent(t,r){try{let e=await this.gapi.client.calendar.events.insert({calendarId:t,resource:r,sendUpdates:r.sendUpdates||"none"});return console.log("Event created:",e.result),e.result}catch(e){throw console.error("Error creating event:",e),e}}async deleteEventByCalendarAndEventNames(t,r){try{let e=await this.findCalendarByName(t);if(!e?.id)throw new Error(`Calendar named "${t}" not found`);let i=await this.findEventByName(e.id,r);if(!i?.id)throw new Error(`Event named "${r}" not found`);return this.deleteEvent(e.id,i.id)}catch(e){throw console.error("Error deleting event by calendar and event names:",e),e}}async deleteEvent(t,r){try{let e=await this.gapi.client.calendar.events.delete({calendarId:t,eventId:r});return console.log("Event deleted:",e),e}catch(e){throw console.error("Error deleting event:",e),e}}async createRecurringEventByCalendarName(t,r){try{let e=await this.findCalendarByName(t);if(!e?.id)throw new Error(`Calendar named "${t}" not found`);return this.createRecurringEvent(e.id,r)}catch(e){throw console.error("Error creating recurring event by calendar name:",e),e}}async createRecurringEvent(t,r){try{let e=await this.gapi.client.calendar.events.insert({calendarId:t,resource:r});return console.log("Recurring event created:",e.result),e.result}catch(e){throw console.error("Error creating recurring event:",e),e}}async updateEventByCalendarAndEventNames(t,r,e){try{let i=await this.findCalendarByName(t);if(!i?.id)throw new Error(`Calendar named "${t}" not found`);let n=await this.findEventByName(i.id,r);if(!n?.id)throw new Error(`Event named "${r}" not found`);return this.updateEvent(i.id,n.id,e)}catch(i){throw console.error("Error updating event by calendar and event names:",i),i}}async updateEvent(t,r,e){try{let i=await this.gapi.client.calendar.events.update({calendarId:t,eventId:r,resource:e,sendUpdates:e.sendUpdates||"none"});return console.log("Event updated:",i.result),i.result}catch(i){throw console.error("Error updating event:",i),i}}async revokeCalendarAccess(t,r){try{let e=await this.gapi.client.calendar.acl.list({calendarId:t});if(!e.result.items)throw new Error(`No ACL rules found for calendar ${t}`);let i=e.result.items.find(n=>n.scope?.value===r);if(i?.id)await this.gapi.client.calendar.acl.delete({calendarId:t,ruleId:i.id}),console.log("Calendar access revoked for:",r);else throw new Error(`No ACL rule found for email: ${r}`)}catch(e){throw console.error("Error revoking calendar access:",e),e}}async revokeEventAttendee(t,r,e,i="none"){try{let n=await this.gapi.client.calendar.events.get({calendarId:t,eventId:r});if(n.result.attendees){n.result.attendees=n.result.attendees.filter(o=>o.email!==e);let s=await this.gapi.client.calendar.events.update({calendarId:t,eventId:r,resource:n.result,sendUpdates:i});return console.log("Event attendee revoked for:",e),s.result}else throw new Error("event.result.attendees undefined")}catch(n){throw console.error("Error revoking event attendee:",n),n}}},v=class extends y{previousPageToken;nextPageToken;options;overwrite=!1;currentFolderId;currentFolderMetadata;files=[];async createFileBrowser(t,r=this.directory,e=this.nextPageToken,i,n={}){n&&(this.options=n);let s;if(typeof t=="string"){let g=document.getElementById(t);if(!g){console.error(`Container '${t}' not found`);return}s=g}else s=t;this.container=s,s.innerHTML+=`
    <div id="file-browser">
      <div id="file-upload">
        <button id="upload-button">Upload Files</button>
        <input type="file" id="file-input" multiple style="display:none"/>
        <label><input type="checkbox" id="overwrite-checkbox"> Overwrite existing files</label>
      </div>
      <div id="search-bar">
        <input type="text" id="search-input" placeholder="Search files and folders"/>
        <button id="search-button">Search</button>
      </div>
      <div id="drop-zone">Drop files here to upload</div>
      <progress id="upload-progress" max="100" value="0" style="width:100%; display:none;"></progress>
      <div id="folder-path"></div>
      <div id="file-list"></div>
      <button id="previous-page" style="display:none">Previous</button>
      <button id="next-page" style="display:none">Next</button>
    </div>`;let o=s.querySelector("#overwrite-checkbox");o.checked=this.overwrite,o.addEventListener("change",()=>{this.overwrite=o.checked});let a=s.querySelector("#search-button"),l=s.querySelector("#search-input");a.addEventListener("click",()=>{this.searchFiles(l.value,s)});let d=await this.checkFolder(r);if(!d)throw new Error("Folder Not Found");let c;if(Array.isArray(d.files)&&d.files.length>0)c=d.files[0].id;else if(d.id)c=d.id;else throw new Error("Unexpected folderData format");this.directoryId||=c,await this.updateFileList(c,e,i,s),this.setupDragAndDrop(c,e,i,s),this.setupUploadButton(c,e,i,s),this.setupPaginationButtons(c,i,s),document.addEventListener("click",g=>{g.target.closest(".export-menu")||this.removeExportMenus()})}async createFileUploader(t,r=this.directoryId,e,i){if(typeof t=="string"&&(t=document.getElementById(t)),!t){console.error("Container element not found");return}t.innerHTML+=`<div id="file-upload">
            <button id="upload-button">Upload Files</button>
            <input type="file" id="file-input" multiple style="display:none"/>
            <label><input type="checkbox" id="foverwrite-checkbox"> Overwrite existing files</label>
            <button id="create-folder-button">Create Folder</button>
        </div>
        <div id="drop-zone">Drop files here to upload</div>
        <progress id="upload-progress" max="100" value="0" style="width:100%; display:none;"></progress>`;let n=t.querySelector("#foverwrite-checkbox");n.checked=this.overwrite,n.addEventListener("change",()=>{this.overwrite=n.checked}),this.setupUploadButton(r,e,i,t),this.setupDragAndDrop(r,e,i,t),this.setupCreateFolderButton(r,t)}setupCreateFolderButton(t,r){let e=r.querySelector("#create-folder-button");if(!e){console.error("Create folder button not found");return}e.addEventListener("click",async()=>{let i=prompt("Enter folder name:");if(i)try{let n=await this.createDriveFolder(i,t);console.log("Created folder:",n),this.updateFileList(t,void 0,void 0,r)}catch(n){console.error("Error creating folder:",n),alert("Error creating folder. Please try again.")}})}setupUploadButton(t=this.directoryId,r,e,i){let n=i.querySelector("#upload-button"),s=i.querySelector("#file-input");if(!n||!s){console.error("Upload button or file input not found");return}n.addEventListener("click",()=>{s.click()}),s.addEventListener("change",async()=>{let o=s.files;if(o.length>0){let a=Array.from(o).map(d=>({name:d.name,mimeType:d.type,data:d})),l=i.querySelector("#upload-progress");await this.uploadFiles(a,t,l,this.overwrite),this.updateFileList(t,r,e,i),s.value=""}})}setupDragAndDrop(t,r,e,i){let n=i.querySelector("#drop-zone");if(!n){console.error("Drop zone element not found");return}n.addEventListener("dragover",s=>{s.preventDefault(),s.stopPropagation(),n.classList.add("highlight")}),n.addEventListener("dragleave",s=>{s.preventDefault(),s.stopPropagation(),n.classList.remove("highlight")}),n.addEventListener("drop",async s=>{s.preventDefault(),s.stopPropagation(),n.classList.remove("highlight");let o=s.dataTransfer?.files;if(o.length>0){let a=Array.from(o).map(d=>({name:d.name,mimeType:d.type,data:d})),l=i.querySelector("#upload-progress");await this.uploadFiles(a,this.directory,l,this.overwrite),this.updateFileList(t,r,e,i)}})}async updateFileList(t=this.directory,r=void 0,e,i){try{let{files:n,nextPageToken:s}=await this.listDriveFiles(t,100,void 0,r,e);this.files=n,this.currentFolderMetadata=await this.getFileMetadata(t),this.renderFileList(n,t,e,i),r!=null&&(this.previousPageToken=r),this.nextPageToken=s,i.querySelector("#previous-page").style.display=this.previousPageToken?"block":"none",i.querySelector("#next-page").style.display=this.nextPageToken?"block":"none"}catch(n){console.error("Error updating file list:",n)}}async searchFiles(t,r){try{let{files:e}=await this.searchDrive(t,100,void 0,this.currentFolderId);this.files=e,e&&this.renderFileList(e,this.currentFolderId,this.currentFolderId,r)}catch(e){console.error("Error searching files:",e)}}renderFileList(t,r=this.directoryId,e,i){let n=i.querySelector("#file-list"),s=i.querySelector("#folder-path");if(!n||!s){console.error("File browser elements not found");return}let o="";t.forEach((a,l)=>{let d=this.getFileTypeIcon(a);o+=`<div class="file-item" data-index="${l}">
            ${d} ${a.name} 
            <span class="share-btn" data-index="${l}">\u{1F517}</span>
            <span class="delete-btn" data-id="${a.id}">\u{1F5D1}\uFE0F</span>
          </div>`}),n.innerHTML=o,this.setupFileItemClick(e,i),this.setupDeleteFileClick(i),this.setupShareFileClick(i),r!==this.directory?(s.innerHTML='<button id="parent-folder">Go to Parent Folder</button>',i.querySelector("#parent-folder").addEventListener("click",()=>{this.goBackToParentFolder(i)})):s.innerHTML=""}setupShareFileClick(t){t.querySelectorAll(".share-btn").forEach(e=>{e.addEventListener("click",async i=>{i.stopPropagation();let n=parseInt(e.getAttribute("data-index"));if(!this.files)return;let s=this.files[n];try{let o=await this.getSharableLink(s.id);alert(`Sharable link for ${s.name}: ${o}`)}catch(o){console.error("Error generating sharable link:",o),alert("Error generating sharable link. Please try again.")}})})}setupDeleteFileClick(t){let r=t.querySelectorAll(".delete-btn");r.forEach(e=>{e.addEventListener("click",i=>{i.stopPropagation();let n=e.getAttribute("data-id");e.isConfirming?(this.deleteFile(n),e.closest(".file-item").remove()):(e.textContent="\u274C?",e.isConfirming=!0)})}),document.addEventListener("click",()=>{r.forEach(e=>{e.textContent="\u{1F5D1}\uFE0F",e.isConfirming=!1})},{once:!0})}getFileTypeIcon(t){return t?.thumbnailLink?`<img src="${t.thumbnailLink}" alt="${t.name}" class="file-icon" />`:t?.iconLink?`<img src="${t?.iconLink}" alt="${t.name}" class="file-icon" />`:t?.mimeType==="application/vnd.google-apps.folder"?"\u{1F4C1}":t?.mimeType.startsWith("image/")?"\u{1F5BC}\uFE0F":t?.mimeType==="text/csv"||t.mimeType==="application/vnd.ms-excel"?"\u{1F4CA}":"\u{1F4C4}"}removeExportMenus(){document.querySelectorAll(".export-menu").forEach(t=>t.remove())}showExportMenu(t,r,e){this.removeExportMenus();let i=document.createElement("div");i.className="export-menu",e.forEach(n=>{let s=document.createElement("button");s.textContent=n.label,s.addEventListener("click",async o=>{o.preventDefault(),o.stopPropagation(),await this.downloadFile(r.id,n.mime,r.name),this.removeExportMenus()}),i.appendChild(s)}),t.appendChild(i)}setupFileItemClick(t,r){r.querySelectorAll(".file-item").forEach(e=>{e.addEventListener("click",async i=>{i.stopPropagation(),this.removeExportMenus();let n=Number(e.getAttribute("data-index")),s=this.files?.[n];if(!s)return;if(s.mimeType==="application/vnd.google-apps.folder"){await this.updateFileList(s.id,void 0,t,r),this.currentFolderId=s.id;return}if(this.options.onFileClick){this.options.onFileClick(s);return}let o=w[s.mimeType]??[];if(o.length>1)this.showExportMenu(e,s,o);else try{let a=o[0]?.mime;await this.downloadFile(s.id,a,s.name),console.log("Downloaded:",s.name)}catch(a){console.error("Download failed:",a)}})})}setupPaginationButtons(t,r,e){e.querySelector("#previous-page").addEventListener("click",()=>{this.previousPageToken!==void 0&&(this.updateFileList(t,this.previousPageToken,r,e),this.previousPageToken=void 0)}),e.querySelector("#next-page").addEventListener("click",()=>{this.nextPageToken&&this.updateFileList(t,this.nextPageToken,r,e)})}async goBackToParentFolder(t){try{if(this.currentFolderMetadata&&this.currentFolderMetadata.parents&&this.currentFolderMetadata.parents.length>0){let r=this.currentFolderMetadata.parents[0];if(this.currentFolderId===this.directoryId){console.log("Reached the main directory.");return}this.currentFolderId=r,await this.updateFileList(r,void 0,void 0,t)}else console.error("This folder does not have a parent.")}catch(r){console.error("Error going back to parent folder:",r)}}};var E=class p{static notes=[];static addNote(t,r){p.notes.push({idx:t,text:r}),p.notes.sort((e,i)=>e.idx-i.idx)}static clearNotes(){p.notes=[]}static processArraysForCSV(t,r="|",e=[],i=!1){let n=r,s="";e.length&&(s+=p.quoteRow(e,",")+`
`);let o=0;return t.forEach((a,l)=>{let d;typeof a=="string"?d=a.split(n).map(String):d=a.map(String),i&&p.notes[o]?.idx===l&&(d.push(p.notes[o].text),o++),s+=p.quoteRow(d,",")+`
`}),s}static saveCSV(t=`a,b,c
1,2,3`,r=""){let e="\uFEFF",i=new Blob([e+t],{type:"text/csv;charset=utf-8;"}),n=URL.createObjectURL(i),s=document.createElement("a");s.href=n,s.target="_blank";let o=r;o||(o=new Date().toISOString()),/\.(csv)$/i.test(o)||(o+=".csv"),s.download=o,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n)}static openCSV(t=",",r=p.defaultOnOpen){return new Promise((e,i)=>{let n=document.createElement("input");n.type="file",n.accept=".csv,.tsv",n.onchange=s=>{let o=s.target.files?.[0];if(!o)return i(new Error("No file selected"));let a=new FileReader;a.onload=()=>{let l=a.result,d=p.detectDelimiter(l,t),c=p.splitLines(l),g=p.parseLine(c.shift(),d),h=c.map(u=>p.parseLine(u,d));r(h,g,o.name),e({data:h,header:g,filename:o.name})},a.readAsText(o,p.detectEncoding(o.name))},n.click()})}static openCSVRaw(t=p.defaultOnOpenRaw){return new Promise((r,e)=>{let i=document.createElement("input");i.type="file",i.accept=".csv,.tsv",i.onchange=n=>{let s=n.target.files?.[0];if(!s)return e(new Error("No file selected"));let o=new FileReader;o.onload=()=>{let a=o.result;t(a,s.name),r({data:a,filename:s.name})},o.readAsText(s,p.detectEncoding(s.name))},i.click()})}static defaultOnOpen(t,r,e){console.log("CSV opened:",r,t,e)}static defaultOnOpenRaw(t,r){console.log("Raw CSV opened:",r,`
`,t)}static attachSaveButton(t,r,e){(typeof t=="string"?document.getElementById(t):t)?.addEventListener("click",()=>{let n=r(),s=e?e():"";p.saveCSV(n,s)})}static attachOpenButton(t,r=",",e){(typeof t=="string"?document.getElementById(t):t)?.addEventListener("click",()=>p.openCSV(r,e))}static parseLine(t,r){let e=[],i="",n=!1;for(let s=0;s<t.length;s++){let o=t[s];o==='"'?n&&t[s+1]==='"'?(i+='"',s++):n=!n:o===r&&!n?(e.push(i),i=""):i+=o}return e.push(i),e}static quoteRow(t,r){return t.map(e=>[r,'"',`
`,"\r"].some(i=>e.includes(i))?`"${e.replace(/"/g,'""')}"`:e).join(r)}static splitLines(t){return t.replace(/\r\n/g,`
`).replace(/\r/g,`
`).split(`
`).filter(r=>r!=="")}static detectDelimiter(t,r){let e=t.slice(0,1024),i={",":(e.match(/,/g)||[]).length,"	":(e.match(/\t/g)||[]).length,";":(e.match(/;/g)||[]).length};return Object.entries(i).reduce((n,[s,o])=>o>i[n]?s:n,r)}static detectEncoding(t){let r=t.split(".").pop()?.toLowerCase();return"utf-8"}static processDataForCSV(t){if(!t.data||!t.data.length)return;let r=Array.isArray(t.data)?t.data:[t.data],e=t.header??Object.keys(r[0]);if(e.includes("timestamp")){let a=e.indexOf("timestamp")+1;e.splice(a,0,"localized")}let i=[];r.forEach(a=>{let l=Array.isArray(a[e[0]])?a[e[0]].length:1;for(let d=0;d<l;d++){let c=[];e.forEach(g=>{let h=Array.isArray(a[g])?a[g][d]:a[g];if(g==="timestamp"){let u=new Date(h);c.push(u.toISOString(),u.toLocaleString())}else c.push(String(h??""))}),i.push(p.quoteRow(c,","))}});let n=p.quoteRow(e,",")+`
`,s=i.join(`
`),o={filename:t.filename,header:n,body:s};return t.save&&p.saveCSV(n+s,t.filename||""),o}static parseCSVData=(t,r,e,i=!0,n=(s,o,a)=>{let l={filename:o,header:a};return s.forEach(d=>{let c=d.split(",");a.forEach((g,h)=>{(l[g]??=[]).push(c[h])})}),l})=>{let s=t.includes("\r")?t.split(`\r
`):t.split(`
`);return e||(e=s[0]),typeof e=="string"&&(e=e.split(",")),s.shift(),i||s.pop(),n(s,r,e)}};function b(p){let t=new Date(p),r=(a,l=2)=>a.toString().padStart(l,"0"),e=t.getMilliseconds().toString().padStart(3,"0"),i=-t.getTimezoneOffset(),n=i>=0?"+":"-",s=Math.floor(Math.abs(i)/60),o=Math.abs(i)%60;return`${t.getFullYear()}-${r(t.getMonth()+1)}-${r(t.getDate())}T${r(t.getHours())}:${r(t.getMinutes())}:${r(t.getSeconds())}.${e}(UTC${n}${r(s)}:${r(o)})`}})();
